name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: 'TestGestioneProgetti'
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_USER: ${{ secrets.DB_USER }}
          MYSQL_PASSWORD: ${{ secrets.DB_USER_PASSWORD }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Wait for MySQL to start
      run: sleep 60  # Aumenta il tempo di attesa a 60 secondi

    - name: Debug repository structure
      run: ls -lR

    - name: Set up database
      env:
        MYSQL_HOST: 127.0.0.1
        MYSQL_USER: ${{ secrets.DB_USER }}
        MYSQL_PASSWORD: ${{ secrets.DB_USER_PASSWORD }}
        MYSQL_DATABASE: 'TestGestioneProgetti'
      run: |
        mysql -h $MYSQL_HOST -u $MYSQL_USER -p$MYSQL_PASSWORD -e "CREATE DATABASE IF NOT EXISTS TestGestioneProgetti;"
        mysql -h $MYSQL_HOST -u $MYSQL_USER -p$MYSQL_PASSWORD TestGestioneProgetti < sql/test_database_setup.sql
        mysql -h $MYSQL_HOST -u $MYSQL_USER -p$MYSQL_PASSWORD -e "SHOW TABLES;" TestGestioneProgetti
        mysql -h $MYSQL_HOST -u $MYSQL_USER -p$MYSQL_PASSWORD -e "DESCRIBE utenti;" TestGestioneProgetti  # Aggiungi questa riga per verificare la struttura della tabella

    - name: Debug MySQL Connection
      env:
        MYSQL_HOST: 127.0.0.1
        MYSQL_USER: ${{ secrets.DB_USER }}
        MYSQL_PASSWORD: ${{ secrets.DB_USER_PASSWORD }}
        MYSQL_DATABASE: 'TestGestioneProgetti'
      run: |
        python -c "import mysql.connector; conn = mysql.connector.connect(host='$MYSQL_HOST', user='$MYSQL_USER', password='$MYSQL_PASSWORD', database='$MYSQL_DATABASE'); print('Connected to MySQL:', conn)"

    - name: Run tests
      env:
        MYSQL_HOST: 127.0.0.1
        MYSQL_USER: ${{ secrets.DB_USER }}
        MYSQL_PASSWORD: ${{ secrets.DB_USER_PASSWORD }}
        MYSQL_DATABASE: 'TestGestioneProgetti'
      run: |
        pytest --junitxml=reports/test-report.xml --cov=./ --cov-report=xml --cov-report=html -v

    - name: Upload test report
      uses: actions/upload-artifact@v3
      with:
        name: test-report
        path: reports/test-report.xml

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: htmlcov/

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/gestione_progetti
        IMAGE_TAG=${GITHUB_SHA::7}
        docker build -t $IMAGE_NAME:$IMAGE_TAG .
        docker push $IMAGE_NAME:$IMAGE_TAG
        docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:latest
        docker push $IMAGE_NAME:latest
