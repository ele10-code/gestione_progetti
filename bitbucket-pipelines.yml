image: python:3.8

pipelines:
  default:
    - step:
        name: Update Requirements
        script:
          - chmod +x update_requirements.sh
          - ./update_requirements.sh
          - git config --global user.email "ci-bot@example.com"
          - git config --global user.name "CI Bot"
          - git add requirements.txt
          - git commit -m "Update requirements.txt" || true
          - git push origin HEAD:$BITBUCKET_BRANCH
    - parallel:
        - step:
            name: Test
            services:
              - mysql
            caches:
              - pip
            script:
              - if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
              - pip install pytest
              - pytest -v tests/* --junitxml=test-reports/report.xml
            after-script:
              - pip install coverage
              - coverage run -m pytest tests/
              - coverage report
        - step:
            name: Lint code
            caches:
              - pip
            script:
              - pip install flake8
              - flake8 . --extend-exclude=dist,build --show-source --statistics

  branches:
    main:
      - step:
          name: Test
          services:
            - mysql
          caches:
            - pip
          script:
            - pip install -r requirements.txt
            - pytest tests/ -v
          after-script:
            - pip install coverage
            - coverage run -m pytest tests/
            - coverage report

      - step:
          name: Deploy with Docker
          deployment: production
          services:
            - docker
          script:
            - echo "Building Docker image..."
            - docker build -t $BITBUCKET_REPO_SLUG .
            - echo "Tagging Docker image..."
            - docker tag $BITBUCKET_REPO_SLUG $DOCKER_REGISTRY/$BITBUCKET_REPO_SLUG:$BITBUCKET_COMMIT
            - echo "Pushing Docker image..."
            - docker push $DOCKER_REGISTRY/$BITBUCKET_REPO_SLUG:$BITBUCKET_COMMIT
            - echo "Deploying to server..."
            - pipe: atlassian/ssh-run:0.2.2
              variables:
                SSH_USER: $SERVER_USER
                SERVER: $SERVER_IP
                COMMAND: 'docker pull $DOCKER_REGISTRY/$BITBUCKET_REPO_SLUG:$BITBUCKET_COMMIT && docker stop $CONTAINER_NAME || true && docker rm $CONTAINER_NAME || true && docker run -d --name $CONTAINER_NAME $DOCKER_REGISTRY/$BITBUCKET_REPO_SLUG:$BITBUCKET_COMMIT'

definitions:
  services:
    mysql:
      image: mysql:5.7
      variables:
        MYSQL_DATABASE: 'GestioneProgetti'
        MYSQL_ROOT_PASSWORD: $DB_PASSWORD
    docker:
      memory: 2048